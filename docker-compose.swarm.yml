version: "3.8"
services:

  proxy:
    image: santiagopereyramarchetti/proxy:1.2
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.db!=true"
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 15s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 2m
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - nginx
  
  frontend:
    image: santiagopereyramarchetti/frontend:1.2
    deploy:
      replicas: 2
      placement:
        constraints:
          - "node.labels.db!=true"
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 15s
      update_config:
        parallelism: 1
        delay: 15s
        max_failure_ratio: 0
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 15s
        max_failure_ratio: 0
        order: stop-first
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1m30s

  ## Falta el environment incluir junto con docker configs o docker secrets
  nginx:
    image: santiagopereyramarchetti/nginx:1.2
    secrets:
      - source: laravel-env
        target: /usr/src/.env
        mode: 0660
    deploy:
      replicas: 2
      placement:
        constraints:
          - "node.labels.db!=true"
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 15s
      update_config:
        parallelism: 1
        delay: 10s
        monitor: 15s
        max_failure_ratio: 0
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 10s
        monitor: 15s
        max_failure_ratio: 0
        order: stop-first
      # LO QUITAMOS POR AHORA DEBIDO A QUE LA API TODAVIA NO FUNCIONA, RESPONDE CON ERROR
      # healtcheck:
      #   test: ["CMD", "curl", "-f", "http://localhost/api/health-check"]
      #   interval: 30s
      #   timeout: 5s
      #   retries: 3
      #   start_period: 1m
    depends_on:
      - api

  api:
    image: santiagopereyramarchetti/api:1.2
    secrets:
      - source: laravel-env
        target: /usr/src/.env
        mode: 0660
      - source: init-env
        target: /usr/src/.env.ini
        mode: 0660
    deploy:
      replicas: 4
      placement:
        constraints:
          - "node.labels.db!=true"
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 15s
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: pause
        monitor: 15s
        max_failure_ratio: 0
      rollback_config:
        parallelism: 2
        delay: 10s
        failure_action: pause
        monitor: 15s
        max_failure_ratio: 0
        order: stop-first
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "9000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    depends_on:
      - mysql
      - redis
      
  mysql:
    image: santiagopereyramarchetti/mysql:1.2
    deploy:
      placement:
        constraints:
          - "node.labels.db==true"
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 15s
      update_config:
        parallelism: 1
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0
        order: stop-first
      rollback_config:
        parallelism: 1
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0
        order: stop-first
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - type: volume
        source: mysqldata
        target: /var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

  redis:
    image: redis:7-alpine
    deploy:
      placement:
        constraints:
          - "node.labels.db==true"
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 15s
      update_config:
        parallelism: 1
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0
        order: stop-first
      rollback_config:
        parallelism: 1
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0
        order: stop-first
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - type: volume
        source: redisdata
        target: /data

volumes:
  mysqldata:
  redisdata:

secrets:
  laravel-env:
    file: ./.env
    name: laravel-env-2
  init-env:
    file: ./.env.ini
    name: init-env-2